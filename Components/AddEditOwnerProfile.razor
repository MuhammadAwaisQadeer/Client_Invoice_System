@page "/add-owner-profile"
@page "/edit-owner-profile/{OwnerId:int}"
@rendermode InteractiveServer
@using Client_Invoice_System.Models
@using Client_Invoice_System.Repositories
@using Client_Invoice_System.Repository
@inject OwnerRepository OwnerRepository
@inject NavigationManager Navigation

<h3 class="text-primary">@((Owner.Id == 0) ? "Add Owner Profile" : "Edit Owner Profile")</h3>

<div class="card p-4">
    <div class="mb-3">
        <label class="form-label">Owner Name</label>
        <input type="text" class="form-control" @bind="Owner.OwnerName" />
    </div>
    <div class="mb-3">
        <label class="form-label">Billing Email</label>
        <input type="email" class="form-control" @bind="Owner.BillingEmail" />
    </div>
    <div class="mb-3">
        <label class="form-label">Phone Number</label>
        <input type="tel" class="form-control" @bind="Owner.PhoneNumber" />
    </div>
    <div class="mb-3">
        <label class="form-label">Billing Address</label>
        <textarea class="form-control" @bind="Owner.BillingAddress"></textarea>
    </div>

    <div class="d-flex justify-content-end">
        <button class="btn btn-secondary me-3" @onclick="Cancel">Cancel</button>
        <button class="btn btn-primary" @onclick="SaveOwnerProfile">Save</button>
    </div>

</div>

@code {
    [Parameter] public int? OwnerId { get; set; }
    private OwnerProfile Owner = new();

    protected override async Task OnInitializedAsync()
    {
        if (OwnerId.HasValue)
        {
            Owner = await OwnerRepository.GetOwnerProfileByIdAsync(OwnerId.Value) ?? new OwnerProfile();
        }
    }

    private async Task SaveOwnerProfile()
    {
        if (Owner.Id == 0)
        {
            await OwnerRepository.AddOwnerProfileAsync(Owner);
        }
        else
        {
            await OwnerRepository.UpdateOwnerProfileAsync(Owner);
        }
        Navigation.NavigateTo("/owner-profile");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/owner-profile");
    }
}
