@page "/clients"
@rendermode InteractiveServer
@using Client_Invoice_System.Models
@using Client_Invoice_System.Repositories
@using Client_Invoice_System.Repository
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@inject ClientRepository ClientRepo
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h3>Clients(@(clients?.Count ?? 0)) </h3>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 d-flex justify-content-end">
            <button class="btn btn-primary" @onclick="AddClient">Add New Client</button>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-12">
            <div class="card p-3 shadow-lg rounded-4 bg-white">
                <p id="noResults" class="text-center text-danger d-none">No matching records found.</p>
                <div class="table-responsive">
                    <table id="clientTable" class="table table-striped">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Address</th>
                                <th>Phone Number</th>
                                <th>Currency</th>
                                <th>Country</th>
                                <th>Due Date</th>
                                <th>Client Identifier</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (clients != null && clients.Any())
                            {
                                @foreach (var client in clients)
                                {
                                    <tr>
                                        <td>@client.Name</td>
                                        <td>@client.Email</td>
                                        <td>@client.Address</td>
                                        <td>@client.PhoneNumber</td>
                                        <td>@client.Currency</td>
                                        <td>@client.Country</td>
                                        <td>@client.DueDate.ToShortDateString()</td>
                                        <td>@client.ClientIdentifier</td>
                                        <td>
                                            <button class="btn btn-sm btn-warning me-2" @onclick="() => EditClient(client.ClientId)">Edit</button>
                                            <button class="btn btn-sm btn-danger" @onclick="() => ConfirmDelete(client.ClientId)">Delete</button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="9" class="text-center text-muted">No clients found</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <nav>
                    <ul class="pagination justify-content-center gap-2" id="pagination"></ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this client?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" @onclick="DeleteConfirmed">OK</button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Client> clients;
    private int clientIdToDelete;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            clients = (await ClientRepo.GetAllAsync()).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading clients: {ex.Message}");
        }
    }

    private void AddClient()
    {
        try
        {
            Navigation.NavigateTo("/add-client");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Navigation error: {ex.Message}");
        }
    }

    private void EditClient(int id)
    {
        try
        {
            Navigation.NavigateTo($"/edit-client/{id}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Navigation error: {ex.Message}");
        }
    }

    private async Task ConfirmDelete(int id)
    {
        clientIdToDelete = id;
        await JS.InvokeVoidAsync("ShowDeleteModal");
    }
    private async Task DeleteConfirmed()
    {
        try
        {
            await ClientRepo.DeleteAsync(clientIdToDelete);
            clients = (await ClientRepo.GetAllAsync()).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting client: {ex.Message}");
        }
        finally
        {
            JS.InvokeVoidAsync("HideDeleteModal");
        }
    }
}
