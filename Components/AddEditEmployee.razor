@page "/add-edit-employee/{EmployeeId:int?}"
@rendermode InteractiveServer
@using Client_Invoice_System.Models
@using Client_Invoice_System.Repositories
@using Client_Invoice_System.Repository
@inject EmployeeRepository EmployeeRepository
@inject NavigationManager Navigation

<h3>@(EmployeeId == null ? "Add Employee" : "Edit Employee")</h3>

<div class="card p-3">
    <div class="mb-3">
        <label class="form-label">Name</label>
        <input type="text" class="form-control" @bind="EditingEmployee.EmployeeName" required />
    </div>

    <div class="mb-3">
        <label class="form-label">Designation</label>
        <input type="text" class="form-control" @bind="EditingEmployee.Designation" required />
    </div>

    <div class="mb-3">
        <label class="form-label">Hourly Rate</label>
        <input type="number" class="form-control" @bind="EditingEmployee.HourlyRate" step="0.01" required />
    </div>

    <div class="d-flex justify-content-end gap-2">
        <button class="btn btn-success" @onclick="SaveEmployee">Save Employee</button>
        <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </div>

</div>

@code {
    [Parameter] public int? EmployeeId { get; set; }
    private Employee EditingEmployee = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (EmployeeId != null)
            {
                EditingEmployee = await EmployeeRepository.GetByIdAsync(EmployeeId.Value) ?? new Employee();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading employee: {ex.Message}");
        }
    }

    private async Task SaveEmployee()
    {
        try
        {
            if (EmployeeId == null)
            {
                await EmployeeRepository.AddAsync(EditingEmployee);
            }
            else
            {
                await EmployeeRepository.UpdateAsync(EditingEmployee);
            }

            Navigation.NavigateTo("/employees");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving employee: {ex.Message}");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/employees");
    }
}
